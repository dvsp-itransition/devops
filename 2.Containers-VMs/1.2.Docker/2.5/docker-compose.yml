version: '3.7'
services:  
  web:
    build:
      context: ./web  
    image: dvsp-web:${imageverion}
    container_name: web
    networks:
      - frontend 
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on: 
      - app
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/web_health_check || exit 1"] # -s makes curl quite, no-error-message; -f no output-at-all
      interval: 10s
      timeout: 10s
      retries: 3

  app:
    build:
      context: ./app
    image: dvsp-app:${imageverion}
    container_name: app
    expose:
      - 5000
    volumes:
      - ./app:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:5000/app_health_check || exit 1"] 
      interval: 10s
      timeout: 10s
      retries: 3

    networks:
      - backend
      - frontend

  postgres:
    build:
      context: ./db
    image: dvsp-db:${imageverion}    
    container_name: postgres
    secrets:
      - db_password
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}  
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password   
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432    
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5      
    networks:
      backend: 
        ipv4_address: 192.168.10.254

volumes:
  db-data:

secrets: 
  db_password:
    file: ./db/db_password.txt

networks:
  backend:
    driver: bridge
    ipam:      
      config:
        - subnet: 192.168.10.0/24
          gateway: 192.168.10.1
  frontend:
    driver: bridge
    ipam:      
      config:
        - subnet: 192.168.20.0/24
          gateway: 192.168.20.1

# docker compose config
# docker compose build
# docker history dvsp-db:v1
# docker compose up -d


